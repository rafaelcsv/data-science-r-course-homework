geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = lat + 1))
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = lat + 1)) +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = Inf)) +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = Inf)
colour = "red",
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = Inf),
colour = "red",
alpha = 0.5) +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = Inf),
fill = "red",
alpha = 0.5) +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_hline(yintercept = 40,
colour = "red") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = Inf),
fill = "red",
alpha = 0.5) +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_hline(yintercept = 40,
colour = "red") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = 80),
fill = "red",
alpha = 0.5) +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = 80),
fill = "red",
alpha = 0.5) +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = 80),
fill = "red",
alpha = 0.5) +
geom_hline(yintercept = 40,
colour = "red") +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = 80),
fill = "red",
alpha = 0.5) +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi) +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = 80),
fill = "red",
alpha = 0.5) +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi)) +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = 80),
fill = "red",
alpha = 0.5) +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
geom_rect(aes(xmin = 0,
ymin= 40,
xmax= 5,
ymax = Inf),
colour = "red",
alpha = 0.5) +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
fill = "gray",
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
# geom_rect(aes(xmin = 0,
#               ymin= 40,
#               xmax= 5,
#               ymax = Inf),
#           fill = "red",
#           alpha = 0.5) +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
# This ensures we have the default settings for all the R chunks.
knitr::opts_chunk$set(
collapse    = TRUE,
warning     = FALSE, # Whether to display warnings
message     = FALSE, # Whether to display messages
echo        = TRUE,  # In this case we want to see the code
eval        = TRUE   # Whether to evaluate the code and include its results
)
# Clearing all objects, including hidden objects.
rm(list = ls(all.names = TRUE))
# Setting a seed is important every time R needs to do random calculations, ensuring the results remain constant.
set.seed(123)
# Every time you run a new session, libraries must be loaded.
# Package list
required_packages <- c(
"tidyverse",
"dplyr",
"broom",
"ggplot2",
"readxl",
"kableExtra",
"patchwork",
"table1",
"skimr"
)
for (pkg in required_packages) {
# Install packages if not already present
if (!pkg %in% rownames(installed.packages())) {
install.packages(pkg)
}
# Load packages to this current session
library(pkg, character.only = TRUE)
}
# First, lets load the dataset - in this case, an Excel file.
hypoxia <- read_excel("datasets/hypoxia.xlsx")
# Second, we'll clean the variable names, getting rid of capitals and spaces.
hypoxia <- janitor::clean_names(hypoxia)
# Third, we'll extract the variables we need and save them to a new smaller dataset.
hypoxia_lite <- hypoxia %>%
select(age,
female,
race,
bmi,
sleeptime,
min_sao2,
ahi,
smoking,
diabetes,
hyper,
cad,
cpap,
type_surg,
duration_of_surg
)
# Lastly, we'll assing the labels to categorical variable.
hypoxia_lite <- hypoxia_lite %>%
mutate(
type_surg = case_when(
type_surg == 1 ~ "Gastroenterostomy",
type_surg == 2 ~ "Gastric restrictive procedure",
type_surg == 3 ~ "Gastroplasty",
type_surg == 4 ~ "Removal of gastric restrictive device"),
race = case_when(
race == 1 ~ "African American",
race == 2 ~ "Caucasian",
race == 3 ~ "Other"
)
)
# We'll create a summary dataset, grouped by surgery type.
sum_hypoxia <- hypoxia_lite %>% # new table with summary statistics
group_by(type_surg) %>% # group results by surgery type
summarise(n_surgeries=dplyr::n(), # number of surgeries
mean_age=mean(age, na.rm = TRUE), # mean patient age
percent_female=mean(female, na.rm = TRUE), # female patient percentage
mean_bmi=mean(bmi, na.rm = TRUE), # mean patient BMI
mean_sleeptime=mean(sleeptime, na.rm = TRUE), # mean sleep time with SaO2 < 90%
percent_smoking=mean(smoking, na.rm = TRUE), # percentage of patients who smoke
percent_diabetes=mean(diabetes, na.rm = TRUE), # percentage of diabetic patients
percent_hyper=mean(hyper, na.rm = TRUE), # percentage of patients with hypertension
mean_duration=mean(duration_of_surg, na.rm = TRUE), # mean surgery time
)
# This creates variables with the n() of each surgery type via a for() loop.
list_types <- c("Gastroenterostomy","Gastric restrictive procedure","Gastroplasty","Removal of gastric restrictive device")
var_names <- paste0("a", 1:4)
for (i in seq_along(var_names)){
assign(var_names[[i]], sum_hypoxia %>%
filter(type_surg==list_types[[i]]) %>%
pull(n_surgeries))
}
# We'll be able to call those variables inline with `r a1`, `r a2`, and so forth.
# This creates a table 1, useful for scientific articles.
t1 <- table1(~ age +
factor(female) +
factor(race) +
factor(diabetes) |
type_surg,
data=hypoxia_lite,
footnote = "Source: TSHS datasets",
caption = "Descriptive variables by type of surgery"
)
t1
p2 <- ggplot() +
geom_boxplot(data = hypoxia_lite,
aes(x = type_surg,
y = bmi),
colour = "black") +
geom_hline(yintercept = 40,
colour = "red") +
# geom_rect(aes(xmin = 0,
#               ymin= 40,
#               xmax= 5,
#               ymax = Inf),
#           fill = "red",
#           alpha = 0.5) +
annotate("text",
x = 2.5,
y = 41,
label = "Morbidly obese",
size = 2,
colour = "red") +
labs(title = "Body mass index of patients in each type of surgery",
y = "Body mass index",
x = "Type of surgery",
caption = "Source: TSHS datasets") +
theme_minimal()
p2
p3 <- ggplot(hypoxia_lite,
aes(x=age,
y=min_sao2,
colour=as.factor(smoking))
)+
geom_point(alpha=0.5
) +
geom_smooth(method = lm,
se= FALSE
) +
scale_colour_discrete(labels=c('Non smokers', 'Smokers')) +
labs(title = expression(Age~and~Minimum~Nocturnal~SaO[2]),
subtitle = "By Smoking Status",
y = expression(Minimum~Nocturnal~SaO[2]),
x = "Age",
caption = "Source: TSHS datasets",
colour="") +
theme_minimal() +
theme(legend.position="bottom")
p3
